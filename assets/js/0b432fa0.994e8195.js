"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[861],{28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var o=n(96540);const t={},s=o.createContext(t);function i(e){const r=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:r},e.children)}},99202:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"design/zookeeper","title":"ZooKeeper","description":"\x3c!--","source":"@site/docs/latest/design/zookeeper.md","sourceDirName":"design","slug":"/design/zookeeper","permalink":"/docs/latest/design/zookeeper","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"zookeeper","title":"ZooKeeper"},"sidebar":"docs","previous":{"title":"Metadata storage","permalink":"/docs/latest/design/metadata-storage"},"next":{"title":"Overview","permalink":"/docs/latest/ingestion/"}}');var t=n(74848),s=n(28453);const i={id:"zookeeper",title:"ZooKeeper"},a=void 0,d={},l=[{value:"Minimum ZooKeeper versions",id:"minimum-zookeeper-versions",level:2},{value:"ZooKeeper Operations",id:"zookeeper-operations",level:2},{value:"Coordinator Leader Election",id:"coordinator-leader-election",level:2},{value:"Segment &quot;publishing&quot; protocol from Historical and Realtime",id:"segment-publishing-protocol-from-historical-and-realtime",level:2}];function c(e){const r={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.p,{children:["Apache Druid uses ",(0,t.jsx)(r.a,{href:"http://zookeeper.apache.org/",children:"Apache ZooKeeper"})," (ZK) for management of current cluster state."]}),"\n",(0,t.jsx)(r.h2,{id:"minimum-zookeeper-versions",children:"Minimum ZooKeeper versions"}),"\n",(0,t.jsx)(r.p,{children:"Apache Druid supports ZooKeeper versions 3.5.x and above."}),"\n",(0,t.jsx)(r.admonition,{type:"info",children:(0,t.jsx)(r.p,{children:"Note: Starting with Apache Druid 0.22.0, support for ZooKeeper 3.4.x has been removed\nStarting with Apache Druid 31.0.0, support for Zookeeper-based segment loading has been removed."})}),"\n",(0,t.jsx)(r.h2,{id:"zookeeper-operations",children:"ZooKeeper Operations"}),"\n",(0,t.jsx)(r.p,{children:"The operations that happen over ZK are"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/docs/latest/design/coordinator",children:"Coordinator"})," leader election"]}),"\n",(0,t.jsxs)(r.li,{children:['Segment "publishing" protocol from ',(0,t.jsx)(r.a,{href:"/docs/latest/design/historical",children:"Historical"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/docs/latest/design/overlord",children:"Overlord"})," leader election"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.a,{href:"/docs/latest/design/overlord",children:"Overlord"})," and ",(0,t.jsx)(r.a,{href:"/docs/latest/design/middlemanager",children:"Middle Manager"})," task management"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"coordinator-leader-election",children:"Coordinator Leader Election"}),"\n",(0,t.jsxs)(r.p,{children:["We use the Curator ",(0,t.jsx)(r.a,{href:"https://curator.apache.org/curator-recipes/leader-latch.html",children:"LeaderLatch"})," recipe to perform leader election at path"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"${druid.zk.paths.coordinatorPath}/_COORDINATOR\n"})}),"\n",(0,t.jsx)(r.h2,{id:"segment-publishing-protocol-from-historical-and-realtime",children:'Segment "publishing" protocol from Historical and Realtime'}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"announcementsPath"})," and ",(0,t.jsx)(r.code,{children:"liveSegmentsPath"})," are used for this."]}),"\n",(0,t.jsxs)(r.p,{children:["All ",(0,t.jsx)(r.a,{href:"/docs/latest/design/historical",children:"Historical"})," processes publish themselves on the ",(0,t.jsx)(r.code,{children:"announcementsPath"}),", specifically, they will create an ephemeral znode at"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"${druid.zk.paths.announcementsPath}/${druid.host}\n"})}),"\n",(0,t.jsx)(r.p,{children:"Which signifies that they exist. They will also subsequently create a permanent znode at"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"${druid.zk.paths.liveSegmentsPath}/${druid.host}\n"})}),"\n",(0,t.jsx)(r.p,{children:"And as they load up segments, they will attach ephemeral znodes that look like"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"${druid.zk.paths.liveSegmentsPath}/${druid.host}/_segment_identifier_\n"})}),"\n",(0,t.jsxs)(r.p,{children:["Processes like the ",(0,t.jsx)(r.a,{href:"/docs/latest/design/coordinator",children:"Coordinator"})," and ",(0,t.jsx)(r.a,{href:"/docs/latest/design/broker",children:"Broker"})," can then watch these paths to see which processes are currently serving which segments."]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);