"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7381],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var r=n(96540);const a={},o=r.createContext(a);function s(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:t},e.children)}},80712:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"development/experimental","title":"Experimental features","description":"\x3c!--","source":"@site/docs/latest/development/experimental.md","sourceDirName":"development","slug":"/development/experimental","permalink":"/docs/latest/development/experimental","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"experimental","title":"Experimental features"},"sidebar":"docs","previous":{"title":"Contribute to Druid docs","permalink":"/docs/latest/development/contribute-to-docs"},"next":{"title":"Release notes","permalink":"/docs/latest/release-info/release-notes"}}');var a=n(74848),o=n(28453);const s={id:"experimental",title:"Experimental features"},l=void 0,i={},c=[];function p(e){const t={li:"li",ol:"ol",p:"p",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:'Features often start out in "experimental" status that indicates they are still evolving.\nThis can mean any of the following things:'}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsx)(t.li,{children:"The feature's API may change even in minor releases or patch releases."}),"\n",(0,a.jsx)(t.li,{children:'The feature may have known "missing" pieces that will be added later.'}),"\n",(0,a.jsx)(t.li,{children:"The feature may or may not have received full battle-testing in production environments."}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"All experimental features are optional."}),"\n",(0,a.jsx)(t.p,{children:"Note that not all of these points apply to every experimental feature. Some have been battle-tested in terms of\nimplementation, but are still marked experimental due to an evolving API. Please check the documentation for each\nfeature for full details."})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);