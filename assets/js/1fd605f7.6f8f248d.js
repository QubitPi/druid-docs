"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4084],{9963:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"type":"mdx","permalink":"/faq","source":"@site/src/pages/faq.md","title":"Frequently Asked Questions","description":"Don\'t see your question here? Ask us","frontMatter":{"title":"Frequently Asked Questions"},"unlisted":false}');var n=i(74848),t=i(28453);const r={title:"Frequently Asked Questions"},d=void 0,o={},u=[{value:"Is Druid a data warehouse? When should I use Druid over Redshift/BigQuery/Snowflake?",id:"is-druid-a-data-warehouse-when-should-i-use-druid-over-redshiftbigquerysnowflake",level:3},{value:"Is Druid a log aggregation/log search system? When should I use Druid over Elastic/Splunk?",id:"is-druid-a-log-aggregationlog-search-system-when-should-i-use-druid-over-elasticsplunk",level:3},{value:"Is Druid a timeseries database? When should I use Druid over InfluxDB/OpenTSDB/Prometheus?",id:"is-druid-a-timeseries-database-when-should-i-use-druid-over-influxdbopentsdbprometheus",level:3},{value:"Does Druid separate storage and compute?",id:"does-druid-separate-storage-and-compute",level:3},{value:"How is Druid deployed?",id:"how-is-druid-deployed",level:3},{value:"Where does Druid fit in my big data stack?",id:"where-does-druid-fit-in-my-big-data-stack",level:3},{value:"Is Druid in-memory?",id:"is-druid-in-memory",level:3}];function l(e){const s={a:"a",admonition:"admonition",h3:"h3",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.admonition,{type:"tip",children:(0,n.jsxs)(s.p,{children:["Don't see your question here? ",(0,n.jsx)("a",{href:"/community/",children:"Ask us"})]})}),"\n",(0,n.jsx)(s.h3,{id:"is-druid-a-data-warehouse-when-should-i-use-druid-over-redshiftbigquerysnowflake",children:"Is Druid a data warehouse? When should I use Druid over Redshift/BigQuery/Snowflake?"}),"\n",(0,n.jsx)(s.p,{children:"Apache Druid is a new type of database to power real-time analytic workloads for\nevent-driven data, and isn\u2019t a traditional data warehouse.  Although Druid\nincorporates architecture ideas from data warehouses such as column-oriented\nstorage, Druid also incorporates designs from search systems and timeseries\ndatabases. Druid's architecture is designed to handle many use cases that\ntraditional data warehouses cannot."}),"\n",(0,n.jsx)(s.p,{children:"Druid offers the following advantages over traditional data warehouses:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Much lower latency for OLAP-style queries"}),"\n",(0,n.jsx)(s.li,{children:"Much lower latency for data ingest (both streaming and batch)"}),"\n",(0,n.jsx)(s.li,{children:"Out-of-the-box integration with Apache Kafka, AWS Kinesis, HDFS, AWS S3, and more"}),"\n",(0,n.jsx)(s.li,{children:"Time-based partitioning, which enables performant time-based queries"}),"\n",(0,n.jsx)(s.li,{children:"Fast search and filter, for fast slice and dice"}),"\n",(0,n.jsx)(s.li,{children:"Minimal schema design and native support for semi-structured and nested data"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Consider using Druid to augment your data warehouse if your use case requires:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Powering an user-facing application"}),"\n",(0,n.jsx)(s.li,{children:"Low-latency query response with high concurrency"}),"\n",(0,n.jsx)(s.li,{children:"Instant data visibility"}),"\n",(0,n.jsx)(s.li,{children:"Fast ad-hoc slice and dice"}),"\n",(0,n.jsx)(s.li,{children:"Streaming data"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"To summarize, Druid shines when the use cases involves real-time analytics and\nwhere the end-user (technical or not) wants to apply numerous queries in rapid\nsuccession to explore or better understand data trends."}),"\n",(0,n.jsx)(s.h3,{id:"is-druid-a-log-aggregationlog-search-system-when-should-i-use-druid-over-elasticsplunk",children:"Is Druid a log aggregation/log search system? When should I use Druid over Elastic/Splunk?"}),"\n",(0,n.jsx)(s.p,{children:"Druid uses inverted indexes (in particular, compressed bitmaps) for fast\nsearching and filtering, but it is not generally considered a search system.\nWhile Druid contains many features commonly found in search systems, such as\nthe ability to stream in structured and semi-structured data and the ability to\nsearch and filter the data, Druid isn\u2019t commonly used to ingest text logs and\nrun full text search queries over the text logs.  However, Druid is often used\nto ingest and analyze semi-structured data such as JSON."}),"\n",(0,n.jsx)(s.p,{children:"Druid at its core is an analytics engine and as such, it can support numerical\naggregations, groupBys (including multi-dimensional groupBys), and other\nanalytic workloads faster and more efficiently than search systems."}),"\n",(0,n.jsx)(s.h3,{id:"is-druid-a-timeseries-database-when-should-i-use-druid-over-influxdbopentsdbprometheus",children:"Is Druid a timeseries database? When should I use Druid over InfluxDB/OpenTSDB/Prometheus?"}),"\n",(0,n.jsx)(s.p,{children:"Druid does share some characteristics with timeseries databases, but also\ncombines ideas from analytic databases and search systems.  Like in timeseries\ndatabases, Druid is optimized for data where a timestamp is present.  Druid\npartitions data by time, and queries that include a time filter will be\nsignificantly faster than those that do not.  Aggregating metrics and filtering\non dimensions (which are roughly equivalent to TSDBs' tags) are also very fast when a\ntime filter is present.  However, because Druid incorporates many architectural designs\nfrom analytics databases and search systems, it can significantly\noutperformance TSDBs when grouping, searching, and filtering on tags that are\nnot time, or when computing complex metrics such as histograms and quantiles."}),"\n",(0,n.jsx)(s.h3,{id:"does-druid-separate-storage-and-compute",children:"Does Druid separate storage and compute?"}),"\n",(0,n.jsxs)(s.p,{children:["Druid creates an indexed copy of raw data that is highly optimized for\nanalytic queries. Druid runs queries over this indexed data, called a ",(0,n.jsx)(s.a,{href:"/docs/latest/design/segments",children:"'segment'"}),"\nin Druid, and does not pull raw data from an external storage system as needed\nby queries."]}),"\n",(0,n.jsx)(s.h3,{id:"how-is-druid-deployed",children:"How is Druid deployed?"}),"\n",(0,n.jsxs)(s.p,{children:["Druid can be deployed on commodity hardware in any *NIX based environment.\nA Druid cluster consists of several different services, each designed to do a small set of things very well (ingestion, querying, coordination, etc).\nMany of these services can be co-located and deployed together on the same hardware as described ",(0,n.jsx)(s.a,{href:"/docs/latest/tutorials/",children:"here"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Druid was designed for the cloud, and runs well in AWS, GCP, Azure, and other cloud environments."}),"\n",(0,n.jsx)(s.h3,{id:"where-does-druid-fit-in-my-big-data-stack",children:"Where does Druid fit in my big data stack?"}),"\n",(0,n.jsx)(s.p,{children:"Druid typically connects to a source of raw data such as a message bus such as Apache Kafka, or a filesystem such as HDFS.\nDruid ingests an optimized, column-oriented, indexed copy of your data and serves analytics workloads on top of it."}),"\n",(0,n.jsx)(s.p,{children:"A common streaming data oriented setup involving Druid looks like this:\nRaw data \u2192 Kafka \u2192 Stream processor (optional, typically for ETL) \u2192 Kafka (optional) \u2192 Druid \u2192 Application/user"}),"\n",(0,n.jsx)(s.p,{children:"A common batch/static file oriented setup involving Druid looks like this:\nRaw data \u2192 Kafka (optional) \u2192 HDFS \u2192 ETL process (optional) \u2192 Druid \u2192 Application/user"}),"\n",(0,n.jsx)(s.p,{children:"The same Druid cluster can serve both the streaming and batch path."}),"\n",(0,n.jsx)(s.h3,{id:"is-druid-in-memory",children:"Is Druid in-memory?"}),"\n",(0,n.jsx)(s.p,{children:"The earliest iterations of Druid didn\u2019t allow for data to be paged in from\nand out to disk, so it was often called an \u201cin-memory\u201d database. As Druid\nevolved, this limitation was removed. To provide a balance between hardware\ncost and query performance, Druid leverages memory-mapping to page data between\ndisk and memory and extend the amount of data a single node can load up to the\nsize of its disks."}),"\n",(0,n.jsx)(s.p,{children:"Individual Historicals can be configured with the maximum amount of data\nthey should be given. Coupled with the Coordinator\u2019s ability to assign data to\ndifferent \u201ctiers\u201d based on different query requirements, Druid is essentially a\nsystem that can be configured across a wide spectrum of performance\nrequirements. All data can be in memory and processed, or data can be heavily\nover-committed compared to the amount of memory available. Druid can also\nsupport complex configurations, such as configuring the most recent month of\ndata in memory, while everything else is over-committed."})]})}function c(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>d});var a=i(96540);const n={},t=a.createContext(n);function r(e){const s=a.useContext(t);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(t.Provider,{value:s},e.children)}}}]);